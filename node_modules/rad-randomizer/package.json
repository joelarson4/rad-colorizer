{
  "name": "rad-randomizer",
  "version": "0.0.3",
  "description": "rad-randomizer is a Reveal.js RadReveal add-on for attaching seeded PRNGs to your slides",
  "main": "build/randomizer",
  "repository": {
    "type": "git",
    "url": "https://github.com/joelarson4/rad-randomizer"
  },
  "scripts": {
    "test": "gulp test"
  },
  "dependencies": {
    "reveal.js": "3.0.0",
    "rad-reveal": "0.0.5"
  },
  "devDependencies": {
    "gulp-uglify": "~1.0.1",
    "gulp-rename": "~1.2.0",
    "gulp": "~3.8.9",
    "gulp-mocha": "~1.1.1",
    "chai": "~1.10.0",
    "gulp-mocha-phantomjs": "~0.5.1",
    "mocha": "~2.0.1",
    "gulp-shell": "~0.2.11",
    "del": "~1.1.1",
    "browserify": "8.0.0",
    "vinyl-transform": "~1.0.0",
    "gulp-jshint": "~1.9.2",
    "rng-js": "git://github.com/skeeto/rng-js.git#b2efe15b66e5efa5dabaf2897ee0ae3ce5a7b30b"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/joelarson4/rad-randomizer/blob/master/LICENSE"
    }
  ],
  "readme": "#rad-randomizer [![Build Status](https://travis-ci.org/joelarson4/rad-randomizer.svg)](https://travis-ci.org/joelarson4/rad-randomizer)\nrad-randomizer is a [Reveal.js](http://lab.hakim.se/reveal-js/) [RadReveal](https://github.com/joelarson4/radReveal) add-on for attaching seeded PRNGs to your slides.\n\nCheck out the [demo slideshow](http://joelarson4.github.io/rad-randomizer/demo.html) to see what rad-randomizer can do.\n\nCheck out [RadReveal](https://github.com/joelarson4/radReveal) to understand how these add-ons work.\n\n##What does rad-randomizer do?\n\nrad-randomizer can add a seeded pseudo random number generater (PRNG) to your slides.\nYou can use these PRNGs in other reveal.js add-ons to attach random seeming but predictable behaviors.\nThat can make your slideshow seem more interesting with less work!\n\n##How is do you use it?\n\nJust add a `data-rad-randomizer` attribute with a non-blank value to any slide.\nThose slide's `data` property will have a property `randomizer` attached.\nThat will be a [Rng-js](https://github.com/skeeto/rng-js) object, which has a `random()` method that supplies a random \nseeming number based on a seed.\n\nSo if you had a slide set up like this:\n\n    <section data-rad-randomizer=\"99\">\n\nThen in your own add-on code the `slide` object supplied for attribute event listeners would have a `data.randomizer` property \nwhich could supply `random()` seeming numbers.\n\n    function listener(attrVal, slideObj, event, radEventName) {\n        var num1 = slideObj.data.randomizer.random();\n        var num2 = slideObj.data.randomizer.random();\n        var num3 = slideObj.data.randomizer.random();\n\n`num1`, `num2`, and `num3` will always get the same value until you change that `data-rad-randomizer` value.  \nCheck out the [Rng-js](https://github.com/skeeto/rng-js) documentation to find out what other methods it supports.\n\n##What attribute values can you use for `data-rad-randomizer`?\n\nThe attribute takes several special values, or any other value you want.\n\n* `TEXT` - uses the slide text as a seed.\n* `HEADING` - uses text from all h1 ... h6 tags as a seed.\n* `H1` ... `H6` uses text from just the `h1` ... `h6` tag you specified\n* `HTML` - uses the slide html as a seed.\n* `RANDOM` - uses a Math.random() as the seed (so it will change each reload).\n* If you supply a number, then that number will be used as the seed.\n* If you supply any other value, then that string will be used as the seed.\n\nSo for example, if you had a slide like this:\n\n    <section data-rad-randomizer=\"HEADING\">\n        <h1>This is the heading text</h1>\n        <h2>Also part of the heading text</h2>\n        <p>This is not part of the heading.</p>\n    </section>\n\nThen the randomizer would use \"This is the heading textAlso part of the heading text\" as the seed, and as long as that heading\ntext didn't change, then the random numbers supplied would be the same ever reload.\n\n##What if you need several independent randomizers per slide?\n\nEach slide will also have a `getRandomizerFor()` property, which you can use to get a custom randomizer within the slide for \nspecific purposes.  For example maybe you want one randomizer to drive the background color and another to drive some kind\nof animation.",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/joelarson4/rad-randomizer/issues"
  },
  "homepage": "https://github.com/joelarson4/rad-randomizer",
  "_id": "rad-randomizer@0.0.3",
  "dist": {
    "shasum": "7b3ba087173afb81932430ef3ba5d41ddf2e6d2a"
  },
  "_from": "rad-randomizer@v0.0.3",
  "_resolved": "https://registry.npmjs.org/rad-randomizer/-/rad-randomizer-0.0.3.tgz"
}
